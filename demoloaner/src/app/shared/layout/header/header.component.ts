import { Component } from "@angular/core";
import { FormBuilder, FormControl } from "@angular/forms";
import { Router } from "@angular/router";
import { debounceTime } from "rxjs/operators";
// import { Version } from 'src/app/version/version.service';

@Component({
  selector: "app-header",
  templateUrl: "./header.component.html",
  styleUrls: ["./header.component.css"],
})
export class HeaderComponent {
  options = [
    "GIF-Q150",
    "GIF-HQ190",
    "CF-HQ190L",
    "TJF-Q180V",
    "BF-1T150",
    "3DV-190",
    "AR-T10E",
    "AR-T12E",
    "BF-1T60",
    "BF-1TH190",
    "BF-1TH1100",
    "BF-1TQ170",
    "BF-1TQ180",
    "BF-3C40",
    "BF-3C160",
    "BF-H190",
    "BF-H1100",
    "BF-MP160F",
    "BF-MP190F",
    "BF-P150",
    "BF-P160",
    "BF-P190",
    "BF-Q170",
    "BF-Q180",
    "BF-Q190",
    "BF-PE2",
    "BF-TE2",
    "BF-UC180F",
    "BF-UC190F",
    "BF-XP60",
    "BF-XP160F",
    "CF-EZ1500DL",
    "CF-H170L",
    "CF-H180AL",
    "CF-H190L",
    "CF-H290ECI",
    "CF-HQ290L",
    "CF-HQ290ZL",
    "CF-LV1L",
    "CF-Q150L",
    "CF-Q180AL",
    "CF-V70L",
    "CHF-B290",
    "CHF-V2",
    "CLL-S700",
    "CV-150",
    "CYF-5A",
    "CYF-V2",
    "CYF-VA2",
    "CYF-VH", //50
    "ENF-GP",
    "ENF-GP2",
    "ENF-P4",
    "ENF-T3",
    "ENF-VH",
    "ENF-VH2",
    "ENF-VQ",
    "ENF-V3",
    "ENF-VT2(PAL)",
    "ENF-VT3",
    "ENF-XP",
    "GF-1TH190",
    "EU-ME1",
    "GF-UCT140-AL5",
    "GF-UCT180",
    "GF-UE160-AL5",
    "GF-UM160",
    "GIF-2T160",
    "GIF-2TH180",
    "GIF-E3",
    "GIF-EZ1500",
    "GIF-H170",
    "GIF-H180",
    "GIF-H180J",
    "GIF-H190",
    "GIF-H290EC",
    "GIF-H290Z",
    "GIF-HQ290",
    "GIF-LV1",
    "GIF-Q180",
    "GIF-V70",
    "GIF-XP150N",
    "GIF-XP170N",
    "GIF-XP180N",
    "GIF-XP190N",
    "GIF-XTQ160",
    "IMH-10",
    "IMH-20",
    "IMH-200",
    "LF-GP",
    "LF-TP",
    "LMD-2451MT",
    "LTF-160",
    "LTF-190-10-3D",
    "LTF-S190-5",
    "LTF-S300-10-3D",
    "LTF-VH",
    "LTF-VP",
    "MAF-GM",
    "MAF-TM", //50
    "OBCU",
    "MAF-DM2",
    "OEV-191",
    "OEV-191H",
    "OEV-261H",
    "OEV-262H", 
    "OEV-321UH",
    "OFP-2",
    "EU-ME2 PREMIER PLUS",
    "EU-ME2_PREMIER",
    "EU-ME2",
    "CH-S190-08-LB",
    "CH-S190-XZ-E",
    "CH-S200-XZ-EB-E",
    "CH-S400-XZ-EB",
    "CH-S700-XZ-EA",
    "CH-SC2-1D",
    "CLH-250",
    "CLH-SC",
    "CLK-4",
    "CLV-180",
    "CLV-190",
    "CLV-290SL",
    "CLV-S40-PRO",
    "CLV-S190",
    "CLV-S200-IR",
    "CLV-S400",
    "CV-170",
    "CV-180",
    "CV-190",
    "CV-1500",
    "CV-V1",
    "TJF-150",
    "TJF-Q150",
    "TJF-Q160R",
    "TJF-Q160VR",
    "TJF-Q170V",
    "TJF-Q190V",
    "UCR",
    "UES-40",
    "UHI-3",
    "UHI-4",
    "UHI-E",
    "UPD-3",
    "URF-P5",
    "URF-P6R",
    "URF-P7R",
    "URF-V",
    "URF-V2R",
    "URF-V3R",
    "USG-400",
    "USG-410",
    "CLL-S1&CLL-V1",
    "ESG-100",
    "ESG-150-200-CELON",
    "ESG-300",
    "ESG-400",
    "NEUROSCOPES",
    "OPTICAL_FORCEPS",
    "PEDIATRIC_UROLOGY&OPTICAL_URETHROTOME",
    "TELESCOPE",
    "TROCARS",
    "URETEROSCOPE",
    "UROLOGY",
    "WORKING_ELEMENT",
    "OIP-1",
    "OTV-S7H-1D-L08E",
    "OTV-S7H-1N",
    "OTV-S7PRO",
    "OTV-S7PROH-HD-10E",
    "OTV-S7PROH-HD-12E",
    "OTV-S7PROH-HD-L08E",
    "OTV-S190",
    "OTV-S200",
    "OTV-S300",
    "OTV-S400",
    "OTV-S700",
    "OTV-SC",
    "OTV-SC2",
    "PCF-H190DL",
    "PCF-PH190L",
    "PCF-Q180AL",
    "PSCU",
    "PSF-1",
    "SIF-H290S",
    "SIF-Q180",
    "SONOSURG-G2",
    "SPL-G",
    "TGF-UC180J",
    "LF-DP",
    "CV-290",
    "GIF-1TH190",
    "SIF-H190",
    "EU-ME3",
    "VIDEOSCOPE_CABLE",
    "ULTRASOUND_PROBE",
    "ULTRASOUND_KEYBOARD",
    "TRANSDUCER",
    "PROBE_DRIVING_UNIT",
    "MONITOR",
    "LIGHT_GUIDE_CABLE",
    "HF_CABLE",
    "KEYBOARD",
    "FOOT_SWITCH",
    "APU-300",
    "GF-UE190",
    "BF-XP190",
    "ENDOEYE",
    "GIF-H290T",
    "TJF-145",
    "MU1",
    "LEAKAGE_TESTER",
    "HYSTERO_FLOW",
    "CH-S200-08-LB",
    "PCF-H190TL",
    "ENF-V4"
  ];
  searchTerm = new FormControl("");
  filteredOptions: string[] = [];
  ver: any;
  formGroup: any;

  constructor(private router: Router, private fb: FormBuilder) {
    // this.ver=this.version.myMethod();
    console.log("********new changes********")
    this.searchTerm.valueChanges
      .pipe(
        debounceTime(300) // debounce for 300ms before calling filterOptions()
      )
      .subscribe((value) => {
        this.filterOptions(value);
      });
  }

  filterOptions(value: string | null) {
    if (value !== null) {
      this.filteredOptions = this.options.filter((option) =>
        option.toLowerCase().includes(value.toLowerCase())
      );
    } else {
      this.filteredOptions = [];
    }
  }
  hideDropdown() {
    this.filteredOptions = [];
  }
  selectOption(option: string) {
    this.searchTerm.setValue(option);
    this.filteredOptions = [];
  }
}
